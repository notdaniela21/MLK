# app.py
import streamlit as st
import pickle
import numpy as np
import matplotlib.pyplot as plt

# Cargar el modelo previamente entrenado
with open('modelo_leche.pkl', 'rb') as f:
    modelo = pickle.load(f)

# Funci√≥n que da an√°lisis y sugerencias seg√∫n el riesgo
def obtener_sugerencias(riesgo):
    if riesgo == "Bajo":
        return """
        ‚úÖ **An√°lisis: Riesgo Bajo**  
        La muestra se encuentra dentro de los l√≠mites microbiol√≥gicos aceptables.  
        - No se detectan indicios de contaminaci√≥n.  
        - Se recomienda mantener las buenas pr√°cticas de higiene, refrigeraci√≥n y transporte.  
        """
    elif riesgo == "Medio":
        return """
        ‚ö†Ô∏è **An√°lisis: Riesgo Medio**  
        Se detecta una carga microbiana moderada, lo que indica posibles fallos en el manejo.  
        - Revise las condiciones de almacenamiento y equipos de pasteurizaci√≥n.  
        - Aplique monitoreos m√°s frecuentes en la cadena de fr√≠o.  
        - Podr√≠a ser necesaria una reinspecci√≥n del lote.  
        """
    elif riesgo == "Alto":
        return """
        ‚ùå **An√°lisis: Riesgo Alto**  
        La muestra presenta una alta probabilidad de contaminaci√≥n microbiana.  
        - Se recomienda inmovilizar el lote hasta su verificaci√≥n en laboratorio.  
        - Aumente los controles de limpieza y sanitizaci√≥n de equipos.  
        - Eval√∫e la capacitaci√≥n del personal en buenas pr√°cticas de manufactura (BPM).  
        """
    else:
        return "Riesgo no determinado. Verifique los datos ingresados."

# T√≠tulo de la aplicaci√≥n
st.title("Clasificador de Riesgo Microbiol√≥gico en Leche")

# Entrada de datos para el usuario
col1e3 = st.number_input('Recuento 10¬≥ (UFC/mL):', min_value=0)
col1e4 = st.number_input('Recuento 10‚Å¥ (UFC/mL):', min_value=0)

# Predecir el nivel de riesgo y mostrar gr√°fica
if st.button('Clasificar Riesgo'):
    entrada = np.array([[col1e3, col1e4]])
    prediccion = modelo.predict(entrada)

    if prediccion == 0:
        riesgo = "Bajo"
    elif prediccion == 1:
        riesgo = "Medio"
    else:
        riesgo = "Alto"

    # Mostrar nivel de riesgo y sugerencias
    st.subheader(f"üîç Nivel de Riesgo: {riesgo}")
    st.markdown(obtener_sugerencias(riesgo))

    # Crear gr√°fica
    fig, ax = plt.subplots()
    etiquetas = ['Coliformes 10¬≥', 'Coliformes 10‚Å¥']
    valores = [col1e3, col1e4]
    colores = ['green', 'orange'] if riesgo == "Medio" else ['green', 'green'] if riesgo == "Bajo" else ['red', 'red']
    ax.bar(etiquetas, valores, color=colores)
    ax.set_ylabel('Recuento UFC/mL')
    ax.set_title('Recuento Bacteriano por Muestra')
    st.pyplot(fig)
